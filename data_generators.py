import random as r
import pandas as pd
import json
from predict_question import predict_question
# def rand_validation_reclor():
#     i = r.randint(0, 99)
#     val = [169, 168, 482, 127, 468, 250, 190, 280, 270, 472, 283, 315, 265, 11, 234, 133, 399, 28, 475, 258, 192, 245, 226, 439, 185, 290, 218, 59, 125, 369, 151, 278, 342, 77, 414, 8, 367, 85, 418, 217, 477, 285, 148, 320, 107, 238, 49, 363, 277, 248, 150, 462, 122, 298, 70, 492, 66, 417, 423, 215, 465, 55, 130, 82, 84, 377, 362, 208, 426, 61, 297, 15, 452, 404, 5, 273, 256, 137, 172, 412, 288, 231, 303, 100, 183, 230, 287, 67, 113, 45, 427, 10, 296, 219, 453, 153, 179, 357, 42, 373]
#     return val[i]
def gen_reclor():
    # Generates a random context, question, choices, answer quadruplet from the full ReClor dataset
    data = []
    df = pd.DataFrame(json.load(open('/home/parklab/data/reclor.json', 'r')))
    val = [169, 168, 482, 127, 468, 250, 190, 280, 270, 472, 283, 315, 265, 11, 234, 133, 399, 28, 475, 258, 192, 245, 226, 439, 185, 290, 218, 59, 125, 369, 151, 278, 342, 77, 414, 8, 367, 85, 418, 217, 477, 285, 148, 320, 107, 238, 49, 363, 277, 248, 150, 462, 122, 298, 70, 492, 66, 417, 423, 215, 465, 55, 130, 82, 84, 377, 362, 208, 426, 61, 297, 15, 452, 404, 5, 273, 256, 137, 172, 412, 288, 231, 303, 100, 183, 230, 287, 67, 113, 45, 427, 10, 296, 219, 453, 153, 179, 357, 42, 373]
    val_dict = {0: [250, 190, 280, 472, 11, 28, 258, 226, 278, 414, 367, 85, 217, 148, 277, 122, 70, 215, 130, 377, 362, 208, 179, 357, 42], 1: [482, 127, 468, 270, 315, 290, 218, 59, 369, 342, 8, 477, 107, 238, 49, 363, 248, 462, 417, 423, 82, 61, 297, 452, 137, 172, 412, 288, 231, 100, 183, 287, 45, 10, 296, 219, 153, 373], 2: [265, 475, 192, 150, 492, 55, 84, 5, 230, 67, 113, 453], 3: [169, 168, 283, 234, 399, 245, 439, 185, 151, 77, 285, 320, 298, 66, 465, 426, 404, 273, 303], 4: [133, 125, 418, 15, 256, 427]}
    # for i in val_dict[question_type]:
    for i in val:
        new_df = df.iloc[i]
        context = new_df['context']
        question = new_df['question']
        choices = ""
        for i, choice in enumerate(new_df['answers']):
            choices += (str(i + 1) + ") " + choice + "\n")
        answer = str(new_df['label'] + 1) + ") " + str(new_df['answers'][new_df['label']])
        data.append({"context": context, "question": question, "choices": choices, "answer": answer})
    return data
def gen_logicqa():
    # i = r.randint(0, 1568)
    val = [200, 949, 910, 826, 812, 422, 460, 1457, 453, 1384, 128, 300, 435, 878, 592, 957, 943, 1508, 644, 958, 310, 1352, 912, 367, 1293, 686, 19, 97, 280, 168, 42, 1407, 1166, 941, 1325, 40, 854, 1387, 8, 843, 1379, 302, 156, 354, 961, 534, 164, 490, 381, 625, 853, 1000, 274, 27, 1323, 371, 130, 756, 371, 1515, 1022, 1521, 951, 1087, 1125, 612, 1430, 919, 725, 64, 721, 1440, 257, 1385, 92, 189, 787, 178, 510, 932, 1355, 1360, 1474, 70, 904, 611, 66, 1133, 1352, 1550, 994, 130, 1203, 170, 254, 289, 421, 1308, 171, 807]
    # val = [224, 1437, 1135, 939, 1372, 617, 1420, 632, 262, 240, 1069, 729, 1378, 863, 37, 326, 889, 90, 46, 655, 250, 573, 480, 702, 747, 482, 1106, 548, 1229, 72, 320, 653, 417, 738, 409, 1543, 160, 781, 700, 1106, 1431, 413, 45, 703, 84, 694, 1353, 680, 1171, 57, 602, 1280, 752, 889, 1409, 1076, 157, 404, 703, 834, 577, 234, 196, 822, 775, 1132, 1292, 1380, 52, 1482, 593, 47, 884, 1106, 1398, 37, 426, 992, 660, 1247, 124, 776, 183, 149, 1519, 34, 1327, 464, 804, 617, 935, 324, 896, 827, 1397, 323, 679, 268, 687, 1277]
    # val_dict = {0: [200, 826, 812, 1457, 453, 1384, 435, 878, 592, 957, 943, 310, 912, 1293, 686, 19, 97, 42, 1325, 1387, 8, 843, 1379, 302, 961, 490, 1000, 130, 1521, 1125, 725, 64, 92, 787, 178, 932, 1360, 1474, 66, 130, 289, 421, 1308], 1: [422, 300, 280, 168, 1407, 40, 156, 354, 164, 381, 853, 274, 27, 371, 371, 1515, 1022, 951, 1087, 919, 257, 1385, 1355, 1203, 171], 2: [460, 128, 1508, 1166, 941, 534, 625, 1323, 756, 1430, 721, 189, 904, 611, 170, 807], 3: [949, 910, 1352, 367, 612, 1440, 510, 70, 1133, 1352, 1550, 994, 254], 4: [644, 958, 854]}
    # scheme_dict = {6: [200, 826, 812, 460, 453, 128, 957, 943, 310, 912, 1293, 686, 97, 280, 164, 490, 625, 853, 756, 1022, 1521, 1087, 1125, 1440, 787, 510, 932, 1360, 1474, 66, 1133, 1203, 254, 421, 224, 1135, 1420, 262, 240, 729, 863, 90, 46, 655, 480, 747, 320, 653, 738, 703, 1353, 1171, 1280, 1409, 703, 426, 660, 1247, 1519, 1327, 935, 1397, 687, 1277], 9: [949, 1325, 1379, 961, 371, 951, 919, 1550, 994, 1378], 2: [910, 422, 435, 1352, 19, 1166, 941, 8, 534, 274, 27, 1323, 1430, 189, 904, 611, 170, 171, 807, 1437, 1069, 326, 482, 72, 417, 1431, 84, 1076, 834, 234, 775, 1380, 124, 183, 324, 827, 323, 268], 0: [1457, 878, 592, 843, 302, 381, 1000, 371, 92, 178, 939, 1372, 617, 250, 573, 1543, 160, 45, 157, 404, 593, 47, 884, 992, 617], 1: [1384, 300, 168, 42, 1407, 40, 1387, 156, 354, 130, 1515, 612, 725, 257, 1385, 70, 1352, 130, 289, 1308, 632, 37, 889, 1106, 548, 409, 781, 700, 1106, 413, 694, 57, 602, 752, 889, 577, 196, 822, 1132, 52, 1482, 1106, 1398, 37, 776, 149, 34, 464, 804, 896, 679], 11: [1508, 644, 958, 854, 721, 702, 1229, 680, 1292], 4: [367, 64, 1355]}
    data = []
    # for i in scheme_dict[n]:
    for i in val:
        df = df = pd.read_json("/home/parklab/data/logicqa.jsonl", lines=True).iloc[i]
        context = df['text']
        question = df['question']
        choices = ""
        for i, choice in enumerate(df['options']):
            choices += (str(i + 1) + ") " + choice + "\n")
        answer = str(df['answer'] + 1) + ") " + str(df['options'][df['answer']])
        data.append({"context": context, "question": question, "choices": choices, "answer": answer})
    return data
# def rand_val_lsat():
#     i = r.randint(0, 99)
#     val = [5, 7, 11, 21, 26, 27, 28, 31, 32, 38, 39, 56, 61, 67, 74, 75, 77, 78, 80, 108, 111, 112, 114, 116, 118, 123, 126, 127, 134, 136, 138, 141, 142, 143, 145, 152, 156, 158, 162, 172, 174, 178, 183, 185, 195, 204, 205, 206, 224, 230, 232, 236, 237, 238, 243, 259, 260, 261, 262, 263, 266, 267, 278, 284, 292, 302, 319, 329, 333, 334, 335, 356, 361, 364, 372, 378, 383, 390, 392, 393, 395, 403, 411, 417, 421, 432, 433, 434, 438, 443, 453, 463, 464, 473, 480, 482, 483, 485, 487, 497]
#     return val[i]
def gen_lsatlr(question_type):
    # i = rand_val_lsat()
    val = [5, 7, 11, 21, 26, 27, 28, 31, 32, 38, 39, 56, 61, 67, 74, 75, 77, 78, 80, 108, 111, 112, 114, 116, 118, 123, 126, 127, 134, 136, 138, 141, 142, 143, 145, 152, 156, 158, 162, 172, 174, 178, 183, 185, 195, 204, 205, 206, 224, 230, 232, 236, 237, 238, 243, 259, 260, 261, 262, 263, 266, 267, 278, 284, 292, 302, 319, 329, 333, 334, 335, 356, 361, 364, 372, 378, 383, 390, 392, 393, 395, 403, 411, 417, 421, 432, 433, 434, 438, 443, 453, 463, 464, 473, 480, 482, 483, 485, 487, 497]
    val_dict = {0: [5, 7, 39, 75, 78, 108, 126, 136, 142, 172, 178, 205, 224, 232, 263, 284, 319, 364, 372, 392, 395, 411, 433, 443, 473, 485], 1: [26, 27, 28, 31, 32, 67, 77, 80, 112, 114, 116, 118, 123, 134, 138, 143, 145, 152, 156, 158, 162, 195, 206, 230, 236, 243, 259, 261, 266, 267, 333, 334, 335, 356, 361, 378, 383, 390, 393, 403, 421, 434, 438, 453, 463, 483, 487, 497], 2: [38, 56, 127, 174, 204, 237, 260, 262, 278, 329, 464, 480], 3: [11, 61, 74, 111, 141, 183, 185, 238, 292, 417, 432], 4: [21, 302, 482]}
    data = []
    for i in val_dict[question_type]:
        df = pd.read_parquet("hf://datasets/dmayhem93/agieval-lsat-lr/data/test-00000-of-00001-e72fb50f12bdc6f0.parquet").iloc[i]
        query = df['query']
        context = query[:query.find("Q:")]
        question = query[query.find("Q:") + len("Q:"):query.find("Answer Choices:")].strip()
        choices_og = df['choices']
        choices = []
        for choice in choices_og:
            choices.append(choice[3:])
        choices_str = ""
        for i, choice in enumerate(choices):
            choices_str += (str(i + 1) + ") " + choice + "\n")
        answer = str(int(df['gold'][0]) + 1) + ") " + choices[df['gold'][0]]
        data.append({"context": context, "question": question, "choices": choices_str, "answer": answer})
    return data